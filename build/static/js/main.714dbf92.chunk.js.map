{"version":3,"sources":["components/Navbar.jsx","components/Layout.jsx","components/TaskCategoriesItem.jsx","components/Loader.jsx","utils/set-page-title.js","pages/TaskCategories.jsx","components/TaskListItem.jsx","pages/TaskList.jsx","pages/Task.jsx","pages/About.jsx","pages/Home.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navbar","props","handleClickToggler","setState","isOpen","state","handleClickNavLink","navbarCollapse","current","className","React","createRef","to","style","backgroundImage","this","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","icon","faTimes","faBars","id","ref","Component","Layout","children","TaskCategoriesItem","title","alias","preview","src","alt","faPuzzlePiece","Loader","role","setPageTitle","document","TaskCategories","categories","map","category","key","TaskListItem","index","TaskListWithRouter","params","match","find","c","tasks","tasksCount","filter","t","length","description","Array","fill","_","TaskList","withRouter","TaskWithRouter","handleClick","isOpenSolution","condition","solution","faKey","Task","About","Home","App","isFetching","baseUrl","fetch","then","response","json","catch","err","console","log","path","exact","component","render","Boolean","window","location","hostname","app","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.714dbf92.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars, faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport class Navbar extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { isOpen: false }\r\n    this.navbarCollapse = React.createRef()\r\n  }\r\n\r\n  handleClickToggler = () => this.setState({ isOpen: !this.state.isOpen })\r\n  handleClickNavLink = () => {\r\n    this.setState({ isOpen: false })\r\n    this.navbarCollapse.current.className = 'navbar-collapse collapse'\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark shadow-sm\">\r\n        <div className=\"container\">\r\n          <NavLink className=\"navbar-brand d-flex align-items-center\" to=\"/home\">\r\n            <div className=\"logo-image mr-1\"\r\n              style={{ backgroundImage: 'url(/assets/logo.png)' }}>\r\n            </div>\r\n            <span className=\"navbar-title\">Задачи Мудрецов</span>\r\n          </NavLink>\r\n          <button className={`navbar-toggler ${this.state.isOpen ? '' : 'collapsed'}`}\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarNav\"\r\n            aria-controls=\"navbarNav\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n            onClick={this.handleClickToggler}\r\n          >\r\n            <FontAwesomeIcon icon={this.state.isOpen ? faTimes : faBars} />\r\n          </button>\r\n          <div className='navbar-collapse collapse'\r\n            id=\"navbarNav\"\r\n            ref={this.navbarCollapse}\r\n          >\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/tasks/\" onClick={this.handleClickNavLink}>\r\n                  Задачи\r\n              </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/about\" onClick={this.handleClickNavLink}>\r\n                  О проекте\r\n              </NavLink>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport { Navbar } from './Navbar'\r\n\r\nexport const Layout = ({ children }) => (\r\n  <>\r\n    <Navbar />\r\n    <main className=\"container\">\r\n      <div className=\"row py-3\">\r\n        <div className=\"col-md-10 col-lg-9 mx-auto\">\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </main>\r\n  </>\r\n)","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPuzzlePiece } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport const TaskCategoriesItem = ({ title, alias, preview }) => (\r\n  <div className=\"col-lg-10 col-xl-9 mb-3 mx-auto\">\r\n    <div className=\"card shadow-sm task-category\">\r\n      <div className=\"card-header text-info\">{title}</div>\r\n      <div className=\"card-body\">\r\n        <p className=\"card-text pre-wrap\">\r\n          <img className=\"w-25 task-category-image\" \r\n            src={`/assets/logo.png`} \r\n            alt=\"Category item\" \r\n          />\r\n          {preview}\r\n        </p>\r\n      </div>\r\n      <div className=\"card-footer d-flex justify-content-center\">\r\n        <NavLink to={`${alias}/`} className=\"btn btn-info px-3\">\r\n          Далее\r\n          <FontAwesomeIcon icon={faPuzzlePiece} className=\"ml-2\" />\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)","import React from 'react'\r\n\r\nexport const Loader = () => (\r\n  <div className=\"d-flex justify-content-center\">\r\n    <div className=\"spinner-border text-info\" role=\"status\">\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n  </div>\r\n)","export const setPageTitle = title => {\r\n  document.title = title\r\n}","import React from 'react'\r\nimport { TaskCategoriesItem } from '../components/TaskCategoriesItem'\r\nimport { Loader } from '../components/Loader'\r\nimport { setPageTitle } from '../utils/set-page-title'\r\n\r\nexport const TaskCategories = ({ categories }) => {\r\n  setPageTitle('Категории задач')\r\n  \r\n  return (\r\n    <>\r\n      <h2 className=\"text-center\">Категории задач</h2>\r\n      <hr />\r\n      <div className=\"row\">\r\n        {categories\r\n          ? categories.map(category => <TaskCategoriesItem {...category} key={category.alias} />)\r\n          : <div className=\"col-12\"><Loader /></div>\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport const TaskListItem = ({ index }) => (\r\n  <div className=\"col-6 col-sm-4 col-md-3 col-lg-2 mb-3\">\r\n    <NavLink to={`${index}`} className=\"btn btn-lg btn-info w-100 stretched-link py-2\">{index + 1}</NavLink>\r\n  </div>\r\n)","import React from 'react'\r\nimport { TaskListItem } from '../components/TaskListItem'\r\nimport { Loader } from '../components/Loader'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { setPageTitle } from '../utils/set-page-title'\r\n\r\nclass TaskListWithRouter extends React.Component {\r\n  setPageTitle = () => {\r\n    if (this.props.categories) {\r\n      const { params } = this.props.match\r\n      const category = this.props.categories.find(c => c.alias === params.category)\r\n      setPageTitle(category.title)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setPageTitle()\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.setPageTitle()\r\n  }\r\n\r\n  render() {\r\n    const { categories, tasks } = this.props\r\n\r\n    if (categories && tasks) {\r\n      const { params } = this.props.match\r\n\r\n      const category = categories.find(c => c.alias === params.category)\r\n      const tasksCount = tasks.filter(t => t.category === category.alias).length\r\n\r\n      const { title, description } = category\r\n\r\n      return (\r\n        <>\r\n          <h2 className=\"text-center\">{title}</h2>\r\n          <hr />\r\n          <p className=\"pre-wrap\">{description}</p>\r\n          <hr />\r\n          <div className=\"row\">\r\n            {\r\n              new Array(tasksCount)\r\n                .fill(null)\r\n                .map((_, index) => <TaskListItem index={index} key={index} />)\r\n            }\r\n          </div>\r\n        </>\r\n      )\r\n    }\r\n\r\n    return <Loader />\r\n  }\r\n}\r\n\r\nexport const TaskList = withRouter(TaskListWithRouter)","import React from 'react'\r\nimport { Loader } from '../components/Loader'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faKey } from '@fortawesome/free-solid-svg-icons'\r\nimport { setPageTitle } from '../utils/set-page-title'\r\n\r\nclass TaskWithRouter extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { isOpenSolution: false }\r\n  }\r\n\r\n  setPageTitle = () => {\r\n    if (this.props.tasks) {\r\n      const { category, id } = this.props.match.params\r\n      const { title } = this.props.tasks.filter(t => t.category === category)[id]\r\n\r\n      setPageTitle(title)\r\n    }\r\n  }\r\n\r\n  handleClick = () => this.setState({ isOpenSolution: !this.state.isOpenSolution })\r\n\r\n  componentDidMount() {\r\n    this.setPageTitle()\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.setPageTitle()\r\n  }\r\n\r\n  render() {\r\n    if (this.props.tasks) {\r\n      const { category, id } = this.props.match.params\r\n      const { title, condition, solution } = this.props.tasks.filter(t => t.category === category)[id]\r\n      const { isOpenSolution } = this.state\r\n\r\n      return (\r\n        <div className=\"row\">\r\n          <div className=\"col-xl-10 mx-auto\">\r\n            <h2 className=\"card-title text-center\">{title}</h2>\r\n            <hr />\r\n            <div className=\"card mx-auto mb-3 shadow-sm\">\r\n              <div className=\"card-header\">\r\n                <h5 className=\"card-title text-center text-info\">Условие</h5>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <p className=\"card-text pre-wrap\">{condition}</p>\r\n                <hr />\r\n                <div className=\"card- d-flex justify-content-center\">\r\n                  <button\r\n                    className={`btn btn-${this.state.isOpenSolution ? 'danger' : 'info'}`}\r\n                    type=\"button\"\r\n                    data-toggle=\"collapse\"\r\n                    data-target=\"#collapseSolution\"\r\n                    aria-expanded=\"false\"\r\n                    aria-controls=\"collapseSolution\"\r\n                    onClick={this.handleClick}\r\n                  >\r\n                    {isOpenSolution ? 'Скрыть' : 'Показать'} решение\r\n                    <FontAwesomeIcon\r\n                      icon={isOpenSolution ? faTimes : faKey}\r\n                      className=\"ml-2\"\r\n                    />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"collapse\" id=\"collapseSolution\">\r\n              <div className=\"card shadow-sm\">\r\n                <div className=\"card-header\">\r\n                  <h5 className=\"card-title text-center text-info\">Решение</h5>\r\n                </div>\r\n                <div className=\"card-body shadow-sm\">\r\n                  <p className=\"card-text pre-wrap\">{solution}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return <Loader />\r\n  }\r\n}\r\n\r\nexport const Task = withRouter(TaskWithRouter)","import React from 'react'\r\nimport { setPageTitle } from '../utils/set-page-title'\r\n\r\nexport const About = () => {\r\n  setPageTitle('О проекте')\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"text-center\">О проекте</h2>\r\n      <hr />\r\n      <p>Пару слов о том, что здесь происходит</p>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { setPageTitle } from '../utils/set-page-title'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPuzzlePiece } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport const Home = () => {\r\n  setPageTitle('Задачи мудрецов')\r\n\r\n  return (\r\n    <>\r\n      <div className=\"jumbotron home-jumbotron\">\r\n        <h1 className=\"display-4 mb-3\">Добро пожаловать!</h1>\r\n        <p className=\"lead\">\r\n          Рад приветствовать Вас на своём сайте, уверен, Вы найдёте то, что придётся по душе\r\n      </p>\r\n        <hr className=\"my-4\" />\r\n        <div className=\"description d-flex justify-content-between\">\r\n          <p>\r\n            Здесь собраны самые разнообразные задачи, требующие гибкости мышления, умения проводить рассуждения,\r\n            создавать стратегии, анализировать данные и выделять ключевую информацию. Задачи заинтересуют\r\n            пытливые умы, независимо от возраста и любых других обстоятельств, а также помогут поддерживать в\r\n            тонусе извилины и интересно провести досуг\r\n        </p>\r\n        </div>\r\n        <p className=\"lead\">\r\n          <NavLink className=\"btn btn-info btn\" to=\"/tasks/\" role=\"button\">\r\n            Перейти к задачам\r\n            <FontAwesomeIcon icon={faPuzzlePiece} className=\"ml-2\" />\r\n          </NavLink>\r\n        </p>\r\n      </div>\r\n    </>\r\n  )\r\n}","import React from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\n\nimport { Layout } from './components/Layout'\n\nimport { TaskCategories } from './pages/TaskCategories'\nimport { TaskList } from './pages/TaskList'\nimport { Task } from './pages/Task'\nimport { About } from './pages/About'\nimport { Home } from './pages/Home'\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      categories: null,\n      tasks: null,\n      isFetching: true\n    }\n  }\n\n  componentDidMount() {\n    const baseUrl = 'https://tfts-admin-panel.herokuapp.com'\n\n    fetch(`${baseUrl}/categories`)\n      .then(response => response.json())\n      .then(categories => this.setState({ categories, isFetching: false }))\n      .then(() => \n        fetch(`${baseUrl}/tasks`)\n          .then(response => response.json())\n          .then(tasks => this.setState({ tasks }))\n          .catch(err => console.log(err))\n      )\n      .catch(err => console.log(err))\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Switch>\n          <Route path=\"/home\"\n            exact\n            component={Home}\n          />\n          <Route path=\"/tasks\"\n            exact\n            render={() => <TaskCategories categories={this.state.categories} />}\n          />\n          <Route path=\"/tasks/:category\"\n            exact\n            render={() => <TaskList {...this.props} tasks={this.state.tasks} categories={this.state.categories} />}\n          />\n          <Route path=\"/tasks/:category/:id\"\n            exact\n            render={() => <Task tasks={this.state.tasks}  />}\n          />\n          <Route path=\"/about\"\n            exact\n            component={About}\n          />\n          <Redirect to=\"/home\" />\n        </Switch>\n      </Layout>\n    )\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.scss'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\nimport 'bootstrap/dist/js/bootstrap.bundle.min'\n\nconst app = <BrowserRouter><App /></BrowserRouter>\n\nReactDOM.render(app, document.getElementById('root'))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}